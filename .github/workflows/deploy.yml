name: Deploy Workflow

on:
  workflow_dispatch: {}
  push:
    branches:
      - master

env:
  AWS_REGION: us-east-1
  S3BUCKET: saeed-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    # - name: Package Repo
    #   run: |
    #     DATE=$(date +%Y%m%d)
    #     S3OBJECT="app_${DATE}.tar.gz"
    #     git archive --format=tar.gz --output=${S3OBJECT} HEAD
    #     mkdir archive
    #     mv ${S3OBJECT} archive/
    #     ls archive
      
    # - name: Upload to S3
    #   uses: jakejarvis/s3-sync-action@master
    #   env:
    #     AWS_S3_BUCKET: ${{ env.S3BUCKET }}
    #     AWS_REGION: ${{ env.AWS_REGION }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     SOURCE_DIR: 'archive'


    - name: Deploy to Auto Scaling Group
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY_PEM }}
      run: |
        # Get the instance IDs of instances in the Auto Scaling Group
        instance_ids=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name saeed --query 'AutoScalingGroups[].Instances[].InstanceId' --output text)

        object_url=$(aws s3 presign s3://saeed-app/${S3OBJECT})

        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key

        # Iterate over each instance
        for instance_id in $instance_ids; do
          # Get the public IP address of the instance
          public_ip=$(aws ec2 describe-instances --instance-ids $instance_id --query 'Reservations[].Instances[].PublicIpAddress' --output text)

          # SSH into the instance and download the object from the S3 bucket
          ssh -o StrictHostKeyChecking=no -i private_key ec2-user@$public_ip "wget $object_url -O ${S3OBJECT}"

        done
